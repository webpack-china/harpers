// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$apple-name: 'apple'
$apple-x: 276px
$apple-y: 0px
$apple-offset-x: -276px
$apple-offset-y: 0px
$apple-width: 64px
$apple-height: 64px
$apple-total-width: 340px
$apple-total-height: 340px
$apple-image: '~btn.png'
$apple: (276px, 0px, -276px, 0px, 64px, 64px, 340px, 340px, '~btn.png', 'apple', )
$apple-2x-name: 'apple@2x'
$apple-2x-x: 0px
$apple-2x-y: 0px
$apple-2x-offset-x: 0px
$apple-2x-offset-y: 0px
$apple-2x-width: 128px
$apple-2x-height: 128px
$apple-2x-total-width: 340px
$apple-2x-total-height: 340px
$apple-2x-image: '~btn.png'
$apple-2x: (0px, 0px, 0px, 0px, 128px, 128px, 340px, 340px, '~btn.png', 'apple@2x', )
$gmail-name: 'gmail'
$gmail-x: 276px
$gmail-y: 74px
$gmail-offset-x: -276px
$gmail-offset-y: -74px
$gmail-width: 64px
$gmail-height: 64px
$gmail-total-width: 340px
$gmail-total-height: 340px
$gmail-image: '~btn.png'
$gmail: (276px, 74px, -276px, -74px, 64px, 64px, 340px, 340px, '~btn.png', 'gmail', )
$gmail-2x-name: 'gmail@2x'
$gmail-2x-x: 138px
$gmail-2x-y: 0px
$gmail-2x-offset-x: -138px
$gmail-2x-offset-y: 0px
$gmail-2x-width: 128px
$gmail-2x-height: 128px
$gmail-2x-total-width: 340px
$gmail-2x-total-height: 340px
$gmail-2x-image: '~btn.png'
$gmail-2x: (138px, 0px, -138px, 0px, 128px, 128px, 340px, 340px, '~btn.png', 'gmail@2x', )
$microsoft-name: 'microsoft'
$microsoft-x: 276px
$microsoft-y: 148px
$microsoft-offset-x: -276px
$microsoft-offset-y: -148px
$microsoft-width: 64px
$microsoft-height: 64px
$microsoft-total-width: 340px
$microsoft-total-height: 340px
$microsoft-image: '~btn.png'
$microsoft: (276px, 148px, -276px, -148px, 64px, 64px, 340px, 340px, '~btn.png', 'microsoft', )
$microsoft-2x-name: 'microsoft@2x'
$microsoft-2x-x: 0px
$microsoft-2x-y: 138px
$microsoft-2x-offset-x: 0px
$microsoft-2x-offset-y: -138px
$microsoft-2x-width: 128px
$microsoft-2x-height: 128px
$microsoft-2x-total-width: 340px
$microsoft-2x-total-height: 340px
$microsoft-2x-image: '~btn.png'
$microsoft-2x: (0px, 138px, 0px, -138px, 128px, 128px, 340px, 340px, '~btn.png', 'microsoft@2x', )
$youtube-name: 'youtube'
$youtube-x: 0px
$youtube-y: 276px
$youtube-offset-x: 0px
$youtube-offset-y: -276px
$youtube-width: 64px
$youtube-height: 64px
$youtube-total-width: 340px
$youtube-total-height: 340px
$youtube-image: '~btn.png'
$youtube: (0px, 276px, 0px, -276px, 64px, 64px, 340px, 340px, '~btn.png', 'youtube', )
$youtube-2x-name: 'youtube@2x'
$youtube-2x-x: 138px
$youtube-2x-y: 138px
$youtube-2x-offset-x: -138px
$youtube-2x-offset-y: -138px
$youtube-2x-width: 128px
$youtube-2x-height: 128px
$youtube-2x-total-width: 340px
$youtube-2x-total-height: 340px
$youtube-2x-image: '~btn.png'
$youtube-2x: (138px, 138px, -138px, -138px, 128px, 128px, 340px, 340px, '~btn.png', 'youtube@2x', )
$spritesheet-width: 340px
$spritesheet-height: 340px
$spritesheet-image: '~btn.png'
$spritesheet-sprites: ($apple, $apple-2x, $gmail, $gmail-2x, $microsoft, $microsoft-2x, $youtube, $youtube-2x, )
$spritesheet: (340px, 340px, '~btn.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5) / 2

@mixin sprite-height($sprite)
  height: nth($sprite, 6) / 2

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3) / 2
  $sprite-offset-y: nth($sprite, 4) / 2
  background-position: $sprite-offset-x  $sprite-offset-y
  background-size: nth($sprite, 7) / 2 auto

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
