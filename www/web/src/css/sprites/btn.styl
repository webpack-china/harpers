/*
Stylus variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon_home_width;
}

The large array-like variables contain all information about a single icon
$icon_home = x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet = width height image $spritesheet_sprites;
*/
$apple_name = 'apple';
$apple_x = 0px;
$apple_y = 0px;
$apple_offset_x = 0px;
$apple_offset_y = 0px;
$apple_width = 64px;
$apple_height = 64px;
$apple_total_width = 138px;
$apple_total_height = 138px;
$apple_image = '~btn.png';
$apple = 0px 0px 0px 0px 64px 64px 138px 138px '~btn.png' 'apple';
$gmail_name = 'gmail';
$gmail_x = 74px;
$gmail_y = 0px;
$gmail_offset_x = -74px;
$gmail_offset_y = 0px;
$gmail_width = 64px;
$gmail_height = 64px;
$gmail_total_width = 138px;
$gmail_total_height = 138px;
$gmail_image = '~btn.png';
$gmail = 74px 0px -74px 0px 64px 64px 138px 138px '~btn.png' 'gmail';
$microsoft_name = 'microsoft';
$microsoft_x = 0px;
$microsoft_y = 74px;
$microsoft_offset_x = 0px;
$microsoft_offset_y = -74px;
$microsoft_width = 64px;
$microsoft_height = 64px;
$microsoft_total_width = 138px;
$microsoft_total_height = 138px;
$microsoft_image = '~btn.png';
$microsoft = 0px 74px 0px -74px 64px 64px 138px 138px '~btn.png' 'microsoft';
$youtube_name = 'youtube';
$youtube_x = 74px;
$youtube_y = 74px;
$youtube_offset_x = -74px;
$youtube_offset_y = -74px;
$youtube_width = 64px;
$youtube_height = 64px;
$youtube_total_width = 138px;
$youtube_total_height = 138px;
$youtube_image = '~btn.png';
$youtube = 74px 74px -74px -74px 64px 64px 138px 138px '~btn.png' 'youtube';
$retina_apple_name = 'retina_apple';
$retina_apple_x = 0px;
$retina_apple_y = 0px;
$retina_apple_offset_x = 0px;
$retina_apple_offset_y = 0px;
$retina_apple_width = 128px;
$retina_apple_height = 128px;
$retina_apple_total_width = 276px;
$retina_apple_total_height = 276px;
$retina_apple_image = '~btn@2x.png';
$retina_apple = 0px 0px 0px 0px 128px 128px 276px 276px '~btn@2x.png' 'retina_apple';
$retina_gmail_name = 'retina_gmail';
$retina_gmail_x = 148px;
$retina_gmail_y = 0px;
$retina_gmail_offset_x = -148px;
$retina_gmail_offset_y = 0px;
$retina_gmail_width = 128px;
$retina_gmail_height = 128px;
$retina_gmail_total_width = 276px;
$retina_gmail_total_height = 276px;
$retina_gmail_image = '~btn@2x.png';
$retina_gmail = 148px 0px -148px 0px 128px 128px 276px 276px '~btn@2x.png' 'retina_gmail';
$retina_microsoft_name = 'retina_microsoft';
$retina_microsoft_x = 0px;
$retina_microsoft_y = 148px;
$retina_microsoft_offset_x = 0px;
$retina_microsoft_offset_y = -148px;
$retina_microsoft_width = 128px;
$retina_microsoft_height = 128px;
$retina_microsoft_total_width = 276px;
$retina_microsoft_total_height = 276px;
$retina_microsoft_image = '~btn@2x.png';
$retina_microsoft = 0px 148px 0px -148px 128px 128px 276px 276px '~btn@2x.png' 'retina_microsoft';
$retina_youtube_name = 'retina_youtube';
$retina_youtube_x = 148px;
$retina_youtube_y = 148px;
$retina_youtube_offset_x = -148px;
$retina_youtube_offset_y = -148px;
$retina_youtube_width = 128px;
$retina_youtube_height = 128px;
$retina_youtube_total_width = 276px;
$retina_youtube_total_height = 276px;
$retina_youtube_image = '~btn@2x.png';
$retina_youtube = 148px 148px -148px -148px 128px 128px 276px 276px '~btn@2x.png' 'retina_youtube';
$spritesheet_width = 138px;
$spritesheet_height = 138px;
$spritesheet_image = '~btn.png';
$spritesheet_sprites = $apple $gmail $microsoft $youtube;
$spritesheet = 138px 138px '~btn.png' $spritesheet_sprites;
$retina_spritesheet_width = 276px;
$retina_spritesheet_height = 276px;
$retina_spritesheet_image = '~btn@2x.png';
$retina_spritesheet_sprites = $retina_apple $retina_gmail $retina_microsoft $retina_youtube;
$retina_spritesheet = 276px 276px '~btn@2x.png' $retina_spritesheet_sprites;

/*
These "retina group" variables are mappings for the naming and pairing of normal and retina sprites.

The list formatted variables are intended for mixins like `retinaSprite` and `retinaSprites`.
*/
$apple_group_name = 'apple';
$apple_group = 'apple' $apple $retina_apple;
$gmail_group_name = 'gmail';
$gmail_group = 'gmail' $gmail $retina_gmail;
$microsoft_group_name = 'microsoft';
$microsoft_group = 'microsoft' $microsoft $retina_microsoft;
$youtube_group_name = 'youtube';
$youtube_group = 'youtube' $youtube $retina_youtube;
$retina_groups = $apple_group $gmail_group $microsoft_group $youtube_group;

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  spriteWidth($icon_home)
}

.icon-email {
  sprite($icon_email)
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
spriteWidth($sprite) {
  width: $sprite[4];
}

spriteHeight($sprite) {
  height: $sprite[5];
}

spritePosition($sprite) {
  background-position: $sprite[2] $sprite[3];
}

spriteImage($sprite) {
  background-image: url($sprite[8]);
}

sprite($sprite) {
  spriteImage($sprite)
  spritePosition($sprite)
  spriteWidth($sprite)
  spriteHeight($sprite)
}

/*
The `retinaSprite` mixin sets up rules and a media query for a sprite/retina sprite.
  It should be used with a "retina group" variable.

The media query is from CSS Tricks: https://css-tricks.com/snippets/css/retina-display-media-query/

$icon_home_group = 'icon-home' $icon_home $icon_home_2x;

.icon-home {
  retinaSprite($icon_home_group)
}
*/
spriteBackgroundSize($sprite) {
  background-size: $sprite[6] $sprite[7];
}

retinaSprite($retina_group) {
  $normal_sprite = $retina_group[1];
  $retina_sprite = $retina_group[2];
  sprite($normal_sprite)

  @media (-webkit-min-device-pixel-ratio: 2),
         (min-resolution: 192dpi) {
    spriteImage($retina_sprite)
    spriteBackgroundSize($normal_sprite)
  }
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of Stylus

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

sprites($spritesheet_sprites);
*/
sprites($sprites) {
  for $sprite in $sprites {
    $sprite_name = $sprite[9];
    .{$sprite_name} {
      sprite($sprite);
    }
  }
}

/*
The `retinaSprites` mixin generates a CSS rule and media query for retina groups
  This yields the same output as CSS retina template but can be overridden in Stylus

retinaSprites($retina_groups);
*/
retinaSprites($retina_groups) {
  for $retina_group in $retina_groups {
    $sprite_name = $retina_group[0];
    .{$sprite_name} {
      retinaSprite($retina_group);
    }
  }
}
